{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-splatoon-3-md-45c33acd88d841dc4d52.js","mappings":"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","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/splatoon-3.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    h2: \"h2\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"We've arrived at the Splatlands, and our paperwork is finally in order - so free agents, it's time to get splating in this new land of chaos!\"), \"\\n\", React.createElement(_components.p, null, \"So I'll go right into the nitty gritty. We're not changing the classic IDTGA formula too much this season as we'll need to do some trials by fire to get things tested. So please bear with us as we all experience and understand this game.\"), \"\\n\", React.createElement(_components.p, null, \"Changes\\nAdded ELO allocations for S+10 to S+50 (allocations for C- to S+9 will remain the same for now)\\nThe Swiss scoring system has been updated to 3 points for a game win, 6 points for a match win, 8 points for a bye, and 2 points per game tie.\"), \"\\n\", React.createElement(_components.p, null, \"Wait, what's in this package?\"), \"\\n\", React.createElement(_components.p, null, \"... \", React.createElement(_components.em, null, \"unwrapping\"), \" ...\"), \"\\n\", React.createElement(_components.p, null, \"... \", React.createElement(_components.em, null, \"still unwrapping\"), \" ...\"), \"\\n\", React.createElement(_components.p, null, \"... \", React.createElement(_components.em, null, \"they really put a lot of bubble wrap in here\"), \" ...\"), \"\\n\", React.createElement(_components.p, null, \"It's some new Sendou badges! Each bracket will now receive its own badges when they win. Isn't that cool?\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"feedback-from-previous-tournaments\"\n  }, \"Feedback from previous tournaments\"), \"\\n\", React.createElement(_components.p, null, \"I've been a little busy, so I haven't had the time to post about the feedback from the previous tournaments, so let's dump it all here, shall we?\"), \"\\n\", React.createElement(_components.p, null, \"The tiered bracket system has been positively received, which is excellent news! There hasn't ever been a free agent tournament with an open skill barrier that has had multiple brackets, so I'm glad that people are enjoying this new system. I hope to continue using them (we need enough people to register!).\"), \"\\n\", React.createElement(_components.p, null, \"People in the feedback were not too happy about the maplist from our final season for Splatoon 2. And to that, I say... just read. I put in all of our promotional material that IDTGA 33 would have every map/mode in the map pool... so I don't know what you were expecting...\"), \"\\n\", React.createElement(_components.p, null, \"Now let's dive into some of those questions!\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Will we be able to earn rewards using the signal strength we've accumulated over the months?\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Eventually, yes, I would like to do something that gives a reward for the signal strength, but right now, we don't have the facilities to do so. If we were to do that, we would need to build a whole kind of virtual shop - which not only has to be developed, but we need to be earning enough money (of which we're not making any) and the whole legal shenanigans of a shop.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"How did you sort the teams into their brackets?\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Teams are created based on combining solo ranks with competitive experience and then balancing the teams based on their play style. We take into consideration time zones a little bit as well.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Who are the first and/or original hosts of IDTGA? Who creates the maplists and who sets up brackets?\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The original host of IDTGA? That would be me - DJam98! I've been doing this for almost five years now. It's such a pleasure to have staff now who help me take care of all the other tasks that come with running a tournament of this scale, and different people handle different tasks each season - nor would I expose them if someone thought that a maplist was terrible.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"No questions! You all work hard, and ill be sure to play next season if I can. :>\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Awesome, that's great to hear! See you then.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Why are players on teams allowed to join? I had a teammate who had to drop because they were playing another tournament today, IDTGA being advertised as a fa tourney as opposed to a more general draft tourney gives the impression that the players will all not be on teams. Also, consider hosting this on Sunday in the future to avoid clashes with Minnow Cup, LSL, etc.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"If you're on the same team as someone competitively, we try to avoid matchups to provide an even playing field. However, sometimes something slips through the cracks as we do not have the roster of every team memorised - especially when it comes to the frantic nature that occurs when handling dropouts in the middle of the tournament.\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Regarding your second question, we have moved the tournament once to avoid some tournaments, but it is impossible not to have a clash on a weekend. So choose your battles (literally).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Definitely be playing any other tournament you guys have, it was amazing to be apart of this one\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"I'm glad you enjoyed the tournament and can't wait to see you in the next season you play!\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Will Turf War be added to OTD tournaments?\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Short answer, no. But we'll judge where the competitive scene goes and what the majority would like to see and base it off that in the future once we understand Splatoon 3 a bit more.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/splatoon-3.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","em","h2","blockquote","_provideComponents","components","React","id","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}