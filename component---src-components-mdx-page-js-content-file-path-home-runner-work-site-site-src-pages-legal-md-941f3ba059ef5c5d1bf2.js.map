{"version":3,"file":"component---src-components-mdx-page-js-content-file-path-home-runner-work-site-site-src-pages-legal-md-941f3ba059ef5c5d1bf2.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,KAAMK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,8EAA+EI,EAAAA,cAAoBR,EAAYK,EAAG,CACjNI,KAAM,oGACL,qCAAsC,oLAAqL,KAAMD,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,qIAAsI,KAAMI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,yYAA0Y,KAAMI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,scAAuc,KAAMI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,0JAA2J,KAAMI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,kQAAmQ,KAAMI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,+ZAAga,KAAMI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,oEAAqE,KAAMI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,gCAAiCI,EAAAA,cAAoBR,EAAYK,EAAG,CAC1/EI,KAAM,0EACL,sFAAuF,KAC5F,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWZ,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,wCCXA,MAAMa,EAAa,CACjBC,KAAI,KACJC,QAAOA,EAAAA,GAEHC,EAAOC,IAAA,IAAEC,MAAM,IAACC,GAAI,SAAEC,GAAS,SAAKX,EAAAA,cAAoBY,EAAAA,GAAQ,CACpEC,UAAW,aACXC,OAAQ,CACNC,MAAOL,EAAIM,YAAYD,MACvBE,YAAaP,EAAIM,YAAYE,OAE9BlB,EAAAA,cAAoBmB,EAAAA,EAAO,CAC5BJ,MAAOL,EAAIM,YAAYD,OACtBL,EAAIM,YAAYE,MAAOlB,EAAAA,cAAoB,UAAW,CACvDa,UAAW,wDACVb,EAAAA,cAAoBoB,EAAAA,GAAa,CAClCrB,WAAYK,GACXO,IAAW,EAYC,SAASU,EAAiB9B,GACvC,OAAOS,EAAAA,cAAoBO,EAAMhB,EAAOS,EAAAA,cAAoBsB,EAAqB/B,GACnF,C,qCC7BA,IANgB,QAAC,SAAEoB,GAAU,SAC3B,wBAAME,UAAU,wGACbF,EACI,C,qCCIT,IAPc,QAAC,MAAEI,EAAK,SAAEJ,GAAU,SAChC,uBAAKE,UAAU,wDACb,sBAAIA,UAAU,2BAA2BE,GACzC,sBAAIF,UAAU,gDAAgDF,GAC1D,C,8FC0BD,MAAMY,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBzB,GAC/B,MAAM0B,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAfxB,EACFA,EAAW0B,GAGb,IAAIA,KAAsB1B,IAChC,CAAC0B,EAAmB1B,GACzB,CAGA,MAAM2B,EAAc,CAAC,EAQd,SAASN,GAAY,WAACrB,EAAU,SAAEY,EAAQ,qBAAEgB,IACjD,IAAIC,EAAgBJ,EAAiBzB,GAMrC,OAJI4B,IACFC,EAAgB7B,GAAc2B,GAGzB,gBACLH,EAAWM,SACX,CAACC,MAAOF,GACRjB,EAEJ,C","sources":["webpack://rewrite/./src/pages/legal.md","webpack://rewrite/./src/components/mdxPage.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"All events Off the Dial organises are 'Signatory events' as defined by the \", React.createElement(_components.a, {\n    href: \"https://docs.google.com/document/d/1-6qlRDNnNSId2U1vve1x9CisJKybtFka69TURVW8qqA/edit?usp=sharing\"\n  }, \"Splatoon Safety - Code of Conduct\"), \". Players that have current bans as defined by the 'Splatoon Safety Council' are not permitted to be associated with Off the Dial in any way as long as their ban remains valid.\"), \"\\n\", React.createElement(_components.li, null, \"By registering for any of Off the Dial's events, you acknowledge that you have read and agree to the respective tournament rules.\"), \"\\n\", React.createElement(_components.li, null, \"Off the Dial is not in the business of selling your data. Any data collected by Off the Dial or the event organisers of Off the Dial is saved for future events until updated by the participant. Off the Dial always takes the nessecary precautions to ensure that sensitive user data is not shared publicly without the user's permission. You may request the deletion of your data at any time.\"), \"\\n\", React.createElement(_components.li, null, \"Matches of the event will be streamed on the official Off the Dial livestream, by registering for any events, you implicitly agree to be streamed. You can request to opt out at any time. Any VODs, clips and screenshots from the livestream featuring players may be used by Off the Dial, however, participants may be offered to be showcased by providing Off the Dial with additional content (such as interviews), and can accept at their own discretion.\"), \"\\n\", React.createElement(_components.li, null, \"Off the Dial may use third-party services, you are required to follow all of the terms of service for all third-party services that Off the Dial uses.\"), \"\\n\", React.createElement(_components.li, null, \"By using any of Off the Dial's services or products (including viewing this site) you agree not to abuse them, or use them for malicious purposes. This includes DDoS, Doxxing, spam requests, and anything else that may result in problems for Off the Dial.\"), \"\\n\", React.createElement(_components.li, null, \"In the event a prize is offered, Off the Dial does not guarantee that players will receive a prize just because they become eligible for one. This may occur for various reasons including but not limited to; prize being no longer being available for purchase, the player has been accused (and proven guilty) of breaking any rules or terms and conditions. Prizes are distributed at the discretion of Off the Dial.\"), \"\\n\", React.createElement(_components.li, null, \"Nintendo is not a sponsor of or affiliated with this tournament.\"), \"\\n\", React.createElement(_components.li, null, \"You must also agree with the \", React.createElement(_components.a, {\n    href: \"https://en-americas-support.nintendo.com/app/answers/detail/a_id/63454\"\n  }, \"Terms for participating in and viewing Community Tournaments using Nintendo Games\")), \"\\n\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/legal.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Page = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.frontmatter.desc\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, mdx.frontmatter.desc), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        desc\n      }\n    }\n  }\n`;\nPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Page, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","ol","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","shortcodes","Link","Mention","Page","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","desc","Title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}