{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-idtga-29-review-md-ef5daf272dc3502e7795.js","mappings":"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","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/idtga-29-review.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\",\n    blockquote: \"blockquote\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Season 29 has reached its end a few weeks ago, and after collecting your feedback and analysing the scores, it's time to give our public review and feedback discussion on how the tournament went!\"), \"\\n\", React.createElement(_components.p, null, \"Before we dig into the feedback, I would like to share how the tournament went from our end. There were \", React.createElement(_components.strong, null, \"zero dropouts\"), \" after teams were made and minimal helpdesk questions besides a few rule clarifications and score fix-ups now and then. This makes running a tournament a lot smoother and allows me to focus on making things run on time and looking fresh. And this is no small feat, so I'd like to thank everyone who played in this tournament to make it such an excellent experience for all of us on the staff team! And let me say, it's been one of the best tournaments I've organised with Off the Dial for a very long time (if not the best tournament I've run here).\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"changes-for-idtga-30\"\n  }, \"Changes For IDTGA 30\"), \"\\n\", React.createElement(_components.p, null, \"We'll continue experimenting with our ELO system to create more balanced matchmaking; please hold with us as we collect more data on what works and what doesn't.\"), \"\\n\", React.createElement(_components.p, null, \"We're lowering the number of teams needed to create a second bracket to 12 teams (from 16). This is so that there's a higher chance of reaching this point, making a more balanced tournament.\"), \"\\n\", React.createElement(_components.p, null, \"In light of lowering this, I'll reveal the official names we'll be using for our brackets!\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"If there are two brackets, we'll have the \", React.createElement(_components.em, null, \"Power Bracket\"), \" (higher) and \", React.createElement(_components.em, null, \"Courage Bracket\"), \" (lower).\"), \"\\n\", React.createElement(_components.li, null, \"If there are three brackets, we'll have the \", React.createElement(_components.em, null, \"Power Bracket\"), \" (highest), \", React.createElement(_components.em, null, \"Wisdom Bracket\"), \" (mid) and the \", React.createElement(_components.em, null, \"Courage Bracket\"), \" (lower).\\nIf you missed it, we are doing these brackets based on the Triforce (from The Legend of Zelda) since our tournament is called 'It's Dangerous to go Alone' after all!\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"discussion-on-feedback\"\n  }, \"Discussion on Feedback\"), \"\\n\", React.createElement(_components.p, null, \"Now let's dig into what you guys had to say!\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"I have a feeling the elo thingy is a bit broken because I (who got an A- in tc as my highest rank) got teamed with 3 quad x ranks which made 1v1 practice really 1 sided\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"There are multiple things to unpack here. First, this is how the balancing system works. Since most of our players have X rank, you will be placed up with X rank players in your team; since teams are balanced, you're not balanced to be similar ranks within the team. However, if we get to the point where we can have multiple brackets, this issue will be reduced. Second, in my opinion, 1v1 practice is a horrible way to practice in the 48 hours you have to practice in this tournament. 1v1 practice is better when you're in your teams with relatively similar skill levels and plan to stay in a team longer than 48 hours. My recommendation would be to either do scrims, league or sendouq. This is because working together in a team using call-outs and understanding how each other play is much more helpful than improving your skill level (which is where 1v1 practice mainly benefits from). I went on a tangent there, but I hope that covers that!\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"3 rank X players and an average B rank player is not as balanced as a mix of X ranks and S+ ranks.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"On the surface, I agree by looking at the results screen, but there's a lot more in it. First of all, X rank has a large skill margin (from 1800 to 3000 in some cases) which is not shown on the results screen. Also, we use tournament experience to balance it further because some people don't play standard ranked battles.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"This tournament was very fun, the teams were all evenly balanced and fair, and their was a decent amount of challenge that made it feel as though our win was deserved. Overall great setup, great tourney!\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"I'm glad you enjoyed the tournament. That's great to hear!\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"The skill balancing was very questionable, two players sharing the EXACT same weapons in the same team should not be a thing and there should be an option in registration if you would mind having no backline or no vc, like last year.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"We've never had those options available in registration, so you may be thinking of another free agent/draft tournament. But in terms of having the same weapons, this is bound to happen because often, we don't have many backlines who signup to the tournament, or everyone plays slayer weapons.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"Thank you all! All the rest of the feedback mentioned in the survey was already discussed, and we're always trying to improve! We appreciate every piece of feedback.\"), \"\\n\", React.createElement(_components.p, null, \"The next IDTGA will occur on the weekend of the 23rd/24th, so lock it into your calendar free agents! registration will open within the next few days, so stay tuned for that!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/idtga-29-review.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","strong","h2","ul","li","em","blockquote","hr","_provideComponents","components","React","id","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}