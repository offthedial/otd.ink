{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-idtga-35-discussions-md-26ef1535d0d38e6057c3.js","mappings":"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","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/idtga-35-discussions.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    h2: \"h2\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Another great season, and I can't thank you all enough! Registration was only open for less than a week \", React.createElement(_components.em, null, \"(sorry for that)\"), \" and we still got 34 teams registered! I can't believe it, honestly. Now, let's dive into what happened behind the scenes as well as the feedback you all sent.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"the-arrival-of-x-rank\"\n  }, \"The Arrival of X Rank\"), \"\\n\", React.createElement(_components.p, null, \"With X rank releasing before our next tournament, I'm excited to implement this into our balancing. When you are signing up, please use your X rank power as this will be a more accurate representation of your in game MMR.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"behind-the-scenes-review\"\n  }, \"Behind the Scenes Review\"), \"\\n\", React.createElement(_components.p, null, \"Our main focus for this season was incorporating our new stream setup, as now instead of having a BRB screen between matches, we've assigned a whole new team to be dedicated to analysing the previous match, which enhances the stream and is one of the biggest things that has been lacking in the Splatoon competive scene as a whole. And it seemed to work pretty well. There were a few hiccups, but I'm happy to say that we will be continuing with this (assuming we have the staff availability).\"), \"\\n\", React.createElement(_components.p, null, \"In terms of the actual tournament, it went mostly smoothly, other than a few issues that shall remain behind closed doors (aka DMs) - don't worry we're looking into this still.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"questions--comments-from-you\"\n  }, \"Questions / Comments From You\"), \"\\n\", React.createElement(_components.p, null, \"Overall, there were more complaints about the team balancing than usual, so I'll be answering to a bunch of the questions and comments you all left in this paragraph here. We balance using a collective of ranks, competitive experience, play style and timezones. Ranks are converted into a numerical value, and this provides what we call the initial \\\"elo\\\". From here, we then take a look at your competive experience and depending on how much you have, we will give more points to your \\\"elo\\\" score. For example, if an A- player had won an event such as Superjump, we would likely give them around 1500 bonus points to add into their \\\"elo\\\" score. Once the elo has been properly calibrated for each individual player, the brackets are them formed and initial teams are created. From here, we drag and drop players manually into we feel like there is an even disburution of play style across the bracket (note that it is within the bracket, so if there are 43 frontline players and 1 backline players, there will be only one team with a backline). Finally, we look at the timezones, group them slightly, and make sure that there are no more than two grouped timezones on a team - because it is impossible to have every team be in the one timezone group AND have teams balanced.\"), \"\\n\", React.createElement(_components.p, null, \"There are few flaws with this system however. The first being is that you there is no way to drop rank in Splatoon 3 (excluding at the end of a season), which makes it harder to see what someone's true rank is. Second, is that we're still trying to fully cailbrate our rank conversions to Splatoon 3. This will take some time to adjust, but hopefully with X rank arriving very shortly, we will be able to get some more balanced adjustments into our system.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Please have players stop chasing a single person and ignoring/barely playing objective.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"We don't condone toxic behavaviour, so if this does occur please let us know during the tournament (with evidence) and we can conduct an investigation (before contacting us though, please discuss it with the enemy team to see if it may have been a misubderstanding). However, I would like to point out that displacing an enemy player is a very real stratergy in any competive game. Even more so if the player is a backline/anchor as taking out that player then allows the team to advance the objective.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Thanks for hosting the tournament, It was really fun!\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Awesome to hear, I'm super glad you enjoyed it!\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Not TOs fault but online bans my beloathed.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Agreed 100%.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Can i be featured in the blog post?\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Ta da!\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Perhaps ask about internet quality and availability day of because it does get frustrating playing with people who show up late or drop. That or assign teams a sub if someone is late by more than 5 minutes.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Our philisophy is to allow any player to have a competitive experience, so limiting players who may not have finicially have access to better internet is not something we will ever enforce in our tournaments. With people dropping, trust me, we don't like it either. That's why check in begins before teams are made to confirm that yes, they are playing and are checking the information on the Discord server. If players are late/not showing up, let us know in the reporting channels - we don't do a roll call for all 136 of you \", React.createElement(_components.em, null, \"(we already have enough on our plate)\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Very nice tournament, however It would be helpful if there was a channel in discord just for the rules of the tournament so that we can check it quickly.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"I'll look into getting that, but the every link you could ever need will always be in current tourney status channel.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"I play almost every month and I have fun every time! The tournament is well organized and the TO’s work really hard to make sure it goes well!\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"And it's great to see you return time and time again.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/idtga-35-discussions.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","em","h2","blockquote","_provideComponents","components","React","id","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}