{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-site-refresh-md-53fb8260ab4f0c8f9922.js","mappings":"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","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/site-refresh.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"I've been working on creating this website to replace the old markdown scripts. I spent a really long time making sure it looks clean and professional, but I also kept it relatively simple, to make sure it isn't too drastic of a change.\"), \"\\n\", React.createElement(_components.p, null, \"And now, it's finally public! ðŸŽ‰\"), \"\\n\", React.createElement(_components.p, null, \"This is just the first deploy, The main thing I focused on was styling the website to give it a unique feel, and then porting the pages.\\nAs of right now, it is still static. However, as time goes on, I will be adding more features and dynamic pages.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"heres-what-i-did\"\n  }, \"Here's what I did:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[x] Update the aesthetic and feel of the \", React.createElement(_components.em, null, \"entire\"), \" website.\"), \"\\n\", React.createElement(_components.li, null, \"[x] Port over everything from the old website.\"), \"\\n\", React.createElement(_components.li, null, \"[x] Create a navigation bar!\"), \"\\n\", React.createElement(_components.li, null, \"[x] Easy access discord link in the corner.\"), \"\\n\", React.createElement(_components.li, null, \"[x] Easy access to tournament pages in the corner.\"), \"\\n\", React.createElement(_components.li, null, \"[x] Mobile users don't get nauseous looking at the page anymore.\"), \"\\n\", React.createElement(_components.li, null, \"[x] A dynamic \", React.createElement(_components.a, {\n    href: \"/posts\"\n  }, \"posts\"), \" page, where you can see the date and author, as well as a little excerpt.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"heres-some-things-that-are-planned-for-the-future\"\n  }, \"Here's some things that are planned for the future:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[ ] Tournament registration on the website\"), \"\\n\", React.createElement(_components.li, null, \"[ ] Being able to log in with discord.\"), \"\\n\", React.createElement(_components.li, null, \"[ ] User profiles.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"If the first deploy's focus was porting the old site, the next deploy's focus will be on porting the bot features.\"), \"\\n\", React.createElement(_components.p, null, \"Stay tuned!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/site-refresh.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"Â·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","h4","ul","li","em","a","_provideComponents","components","React","id","href","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}