{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-idtga-31-review-md-1621628a462a3e1b94c9.js","mappings":"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","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/idtga-31-review.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    h2: \"h2\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"If you played in It's Dangerous to go Alone Season 31, you know it was one of the most chaotic seasons to date, and not due to our fault \", React.createElement(_components.em, null, \"for once\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"If you missed it, what happened was that start.gg wasn't working correctly, so we had to manually transfer all communications onto Discord and do some of the brackets. In the end, it worked out, which was good, but boy, did it cause some stress. Other than that, from the perspective that I saw of the tournament, matches seemed relatively even, so it looks like we might have almost hit the nail on the head regarding the ELO balancing - which is exciting! \", React.createElement(_components.em, null, \"Waku waku\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Now let's dig into what feedback all of you inklings and octolings had to say on the last season of IDTGA.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"feedback-discussions\"\n  }, \"Feedback Discussions\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"If we have a problem on the behalf of the smash.gg and the stream please just let us redo the match.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Now I'm aware of the one match where this issue occurred. To give context to those who weren't in the scenario, there was a dropout on a team, and the round progressed as a 3v4 - which is normal. But unfortunately, our streamer incorrectly assembled the teams, which you would then assume that a team would do a quick KO to end the match. However, both teams played out the game. Following this, a sub was found, who took some time to get them into the lobby. At this point, I decided that this was taking too long since there was only so much time allocated in the round. I decided to award the first game to the team that did not have the DC and communicated to the streamer to skip the first match. However, to top this all off, this was also when the start.gg issues were beginning to occur, so on top of this issue, every other ongoing match was having problems as they could not connect to the bracket platform. This led to a delay in me communicating with the streamer to skip the first match and move on to the second map. Since one team believed this was an error and not meant to occur, you would expect them to allow the other team to KO for a quick restart to fix the issue. But instead, both teams ended up playing, and because of time constraints, the game's result was final.\"), \"\\n\", React.createElement(_components.p, null, \"Essentially what allowed this to happen was errors on every front. Errors on start.gg, errors on the streamer for entering the incorrect info, mistakes on both teams for not allowing a quick KO to redo and an error on myself for slow communication. And for the streamer error and my communication error, I apologise. I've now introduced new rules that will reduce the chances of this happening again, and the streamer is aware of the issue.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"I know there's not much you can do about this, but waiting a long time because there's an uneven number of teams kind of sucks.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"You're right, there's not much I can do about waiting a long time because your team has a bye round, but unfortunately, this occurs in most tournaments that use a swiss or round-robin bracket. So you're aware, we've chosen a swiss-style bracket so that teams aren't out after one or two matches, particularly since this is a free agent tournament.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"This was a lot of fun for me! And great work dealing with the unexpected start.gg crashes, etc. One request might be to put the poll for the next tournament in the Discord as well as the stream or announce when it will be in the server.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Thank you for the positive feedback, and we'll look into announcing the next season earlier. However, this isn't always possible because sometimes we can't confirm the dates internally until factors such as work and other IRL life plans have been resolved.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Thanks for reading and we can't wait to see you for season 32!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/idtga-31-review.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","em","h2","blockquote","_provideComponents","components","React","id","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}