{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-idtga-25-review-md-761d343aae53b6cc9bb0.js","mappings":"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","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/idtga-25-review.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    em: \"em\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"With our 25th season over, it's time to take a look at what happened in this season and to give you all some clarity on what happens behind the scenes here at Off the Dial. We're planning on continuing this for all upcoming seasons so if you have a question you'd like answered here let us know on the next feedback form!\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"from-the-organisers\"\n  }, \"From the organisers\"), \"\\n\", React.createElement(_components.p, null, \"I'll be frank, IDTGA 25 didn't have the turnout that I was hoping for and because of this, we didn't get to see how the tiered brackets there won't be many changes and modifications to the rules, but if any are made, they'll all be posted in the blog post when we announce and finalise the date and time for It's Dangerous to go Alone 26. One of the main reasons for this is that we're going through the staff applications and will need time to ensure that any of the new staff know how things operate in Off the Dial.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"now-what-did-you-all-say-in-the-feedback\"\n  }, \"Now what did you all say in the feedback!\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Make a better maplist.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Well I'm not going to lie, but I agree it wasn't a great maplist. And we'll look into making a better  maplist for the next season. However, because our tournaments are quite regular, there will always be some maps on the list that won't be on your favourites.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Oh, the plug-in for the website to register on smash.gg is kinda buggy.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"I know exactly what you mean. The smash.gg embed for registration that is on the signup page isn't the greatest. Plus, recently they removed the option to select skip for now when signing up for the tournament. Because of this we're working with some people to remove this option and just have it so you can enter in your smash.gg profile URL and you don't actually need to register yourselves. However, due to how the signup page was initially configured it's not as simple as it sounds (I tried deleting it earlier this year and it completely broke the signup page). So while it's one of our highest priorities regarding fixing any code, it still may take a while. So please forgive us and we hope you'll give us some patience to fix these issues.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Possibly use weapons to help build teams? I didn't have many issues with it but I worry for teams who might.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"When we originally discussed introducing play styles into the IDTGA this was discussed. However there are some issues that arise with players putting in their weapons instead of play styles. First of all, there isn't one way to play a weapon. For example, the nautilus can be played very offensively or in a more supportive manner. The same can be said about a lot of the shooter class as well. Secondly, when we make the teams, the play styles are converted into numbers so we can make sure that all teams have a similar amount of each type of play style. And yes, this method isn't perfect either - but when you have 60+ registrations, any time save is a godsend when creating teams (trust me, it's not a quick thing to do).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Weakest Link when?\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Ahh Weakest Link, it's been a while since we've had one of these tourneys. Unfortunately, we don't have any plans for a Weakest Link tournament. The main reasons for this is that the current code doesn't support anything other than registration for IDTGA, and therefore has dropped down the list of priorities for what needs to be done in the code. It will come back eventually, but it will likely be part of the Special Series when it returns.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"And that's all! There weren't that many feedback responses this time round but I hope to see some questions in the form after IDTGA 26. Regarding IDTGA 26, we plan to announce more details about it in the upcoming week!\"), \"\\n\", React.createElement(_components.p, null, \"So stay tuned everyone, we'll see you all in Inkopolis Square soon!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/idtga-25-review.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","h3","em","blockquote","_provideComponents","components","React","id","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}