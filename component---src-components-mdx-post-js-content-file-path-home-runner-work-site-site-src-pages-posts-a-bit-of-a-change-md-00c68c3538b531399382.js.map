{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-a-bit-of-a-change-md-00c68c3538b531399382.js","mappings":"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","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/a-bit-of-a-change.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Hey everyone!\"), \"\\n\", React.createElement(_components.p, null, \"It's been a while, and some of you have been wondering why there haven't been any tournaments run here for a while. That's because we're making a significant change behind the scenes, reorganising how our entire staffing structure works for Off the Dial. Why are we doing this? We'll tell you. It's because I'm stepping away from being a TO.\"), \"\\n\", React.createElement(_components.p, null, \"If you've been anywhere near competitive Splatoon on Twitter, you've surely heard about how taxing being a TO is, and unfortunately, it has caught up with me. Six years of running tournaments where the tournament starts at 5 am is not suitable for anyone - plus the additional time leading up to the tournament that a free agent event brings, and I've just reached my breaking point. I also noticed that when I talked about running these tournaments - particularly with my IRL friends - I was always bringing up more negative things than positive, which has been what has signalled to me that it's time to change what I do.\"), \"\\n\", React.createElement(_components.p, null, \"However, I do want to note that I'm not leaving Off the Dial in its entirety. I've spent way too much time and money on this to just drop it. So, instead, I'll be moving into a role best described as a \\\"Creative Director.\\\" Essentially, I'll still be shaping the direction of the organisation; I just won't be as front-facing when running tournaments anymore.\"), \"\\n\", React.createElement(_components.p, null, \"This does mean we're changing how our staffing structure works. We'll now be reorganising the staff so it's a lot more structured so everyone knows what they need to do (and it's due to this lack of a system that it's taken so long for this to happen). I'll announce who will take each of these roles once they have been solidified.\"), \"\\n\", React.createElement(_components.p, null, \"Now let's talk about a few changes you'll see.\"), \"\\n\", React.createElement(_components.p, null, \"First up is the Master's Bracket. We've seen great success with this bracket, and players are accommodating. We plan to continue with it; however, we will be making a few changes to it.\\nWe'll implement a minimum, competitive skill floor throughout the Master's bracket. This is to bring the competitive level of this bracket closer to what we envisioned, as this bracket is intended for those who are investing in competitive Splatoon.\\nThe Master Bracket badge. It's still coming, as we've redesigned the logo for the Master Bracket to be more akin to the other three bracket logos. Apologies to all those who are waiting on this badge.\"), \"\\n\", React.createElement(_components.p, null, \"We're also planning our fourth major update to the Off the Dial site; please stay tuned for more details.\"), \"\\n\", React.createElement(_components.p, null, \"Finally, when is the next tournament?? We're hoping to have the next IDTGA in either the first or second week of October; however, this is yet to be fully confirmed.\"), \"\\n\", React.createElement(_components.p, null, \"Until next time, stay tuned, Dialers!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/a-bit-of-a-change.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"Â·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}