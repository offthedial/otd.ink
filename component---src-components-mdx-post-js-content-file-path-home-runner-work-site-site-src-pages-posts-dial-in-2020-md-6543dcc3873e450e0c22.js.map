{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-dial-in-2020-md-6543dcc3873e450e0c22.js","mappings":"0KAuBe,SAASA,EAAWC,EAAWC,IAC5C,OAAa,EAAGC,WAChB,IAAIC,GAAS,OAAUF,GACvB,OAAO,OAAgBD,EAvBI,IAuBOG,EACpC,C,4FCxBA,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,2GAA4G,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,CAC9OU,GAAI,yBACH,yBAA0B,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,+QAAgRU,EAAAA,cAAoBb,EAAYK,EAAG,CAC7XU,KAAM,UACL,iBAAkB,KAAM,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,yBAA0BU,EAAAA,cAAoBb,EAAYM,OAAQ,KAAM,mCAAoC,iDAAkD,KAAMO,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,iKAAkK,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,mQAAoQ,KAAMU,EAAAA,cAAoBb,EAAYO,GAAI,CACpxBO,GAAI,qDACH,sCAAuCD,EAAAA,cAAoBb,EAAYK,EAAG,CAC3EU,KAAM,gBACL,uBAAwB,KAAM,KAAMF,EAAAA,cAAoBb,EAAYI,GAAI,CACzEU,GAAI,mBACH,mBAAoB,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,yGAA0G,KAAMU,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,KAAMK,EAAAA,cAAoBb,EAAYS,GAAI,KAAMI,EAAAA,cAAoBb,EAAYM,OAAQ,KAAM,uBAAwB,mMAAoM,KAAMO,EAAAA,cAAoBb,EAAYS,GAAI,KAAMI,EAAAA,cAAoBb,EAAYM,OAAQ,KAAM,2BAA4B,6DAA8DO,EAAAA,cAAoBb,EAAYK,EAAG,CACnvBU,KAAM,UACL,iBAAkB,gDAAiD,KAAMF,EAAAA,cAAoBb,EAAYS,GAAI,KAAMI,EAAAA,cAAoBb,EAAYM,OAAQ,KAAM,kBAAmB,2IAA4I,MAAO,KAAMO,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,2CAA4C,KAAMU,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,KAAMG,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,4DAA6D,KAAMI,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,yGAA0G,MAAO,KAAMI,EAAAA,cAAoBb,EAAYI,GAAI,CAC3wBU,GAAI,kBACH,kBAAmB,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,gIAAiI,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,8BAA+B,KAAMU,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,KAAMK,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,qDAAsD,KAAMI,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,6CAA8CI,EAAAA,cAAoBb,EAAYK,EAAG,CACziBU,KAAM,sBACL,OAAQ,QAASF,EAAAA,cAAoBb,EAAYK,EAAG,CACrDU,KAAM,iCACL,gBAAiB,KAAM,MAAO,KAAMF,EAAAA,cAAoBb,EAAYI,GAAI,CACzEU,GAAI,cACH,gBAAiB,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,mGAAoG,KAAMU,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,KAAMG,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,6GAA8G,KAAMI,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,6FAA8F,KAAMI,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,YAAa,KAAMI,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,0EAA2E,MAAO,KAAMI,EAAAA,cAAoBb,EAAYI,GAAI,CAC1uBU,GAAI,oBACH,oBAAqB,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,kKACzE,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWlB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,4DCjCA,MAAMmB,EAAa,CACjBC,KAAI,KACJC,QAAOA,EAAAA,GAEHC,EAAOC,IAAA,IAAEC,MAAM,IAACC,GAAI,SAAEC,GAAS,SAAKZ,EAAAA,cAAoBa,EAAAA,GAAQ,CACpEC,UAAW,aACXC,OAAQ,CACNC,MAAOL,EAAIM,YAAYD,MACvBE,YAAaP,EAAIQ,UAElBnB,EAAAA,cAAoBoB,EAAAA,EAAO,CAC5BJ,MAAOL,EAAIM,YAAYD,OACtBhB,EAAAA,cAAoB,MAAO,CAC5Bc,UAAW,6BACVd,EAAAA,cAAoB,IAAK,KAAMW,EAAIM,YAAYI,QAASrB,EAAAA,cAAoB,IAAK,KAAM,KAAMA,EAAAA,cAAoB,IAAK,KAAMsB,EAAWX,EAAIM,YAAYM,SAAUvB,EAAAA,cAAoB,UAAW,CACjMc,UAAW,wDACVd,EAAAA,cAAoBwB,EAAAA,GAAa,CAClCzB,WAAYM,GACXO,IAAW,EACRU,EAAaG,IACjB,IAAIF,EAAO,IAAIG,KAAKD,GAGpB,OAFAF,GAAO3C,EAAAA,EAAAA,GAAW2C,EAAMA,EAAKI,qBAC7BJ,GAAOK,EAAAA,EAAAA,GAAOL,EAAM,iBACbA,CAAI,EAeE,SAASM,EAAiB3C,GACvC,OAAOc,EAAAA,cAAoBQ,EAAMtB,EAAOc,EAAAA,cAAoB8B,EAAqB5C,GACnF,C,qCCxCA,IANgB,QAAC,SAAE0B,GAAU,SAC3B,wBAAME,UAAU,wGACbF,EACI,C,qCCIT,IAPc,QAAC,MAAEI,EAAK,SAAEJ,GAAU,SAChC,uBAAKE,UAAU,wDACb,sBAAIA,UAAU,2BAA2BE,GACzC,sBAAIF,UAAU,gDAAgDF,GAC1D,C,8FC0BD,MAAMmB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBjC,GAC/B,MAAMkC,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAfhC,EACFA,EAAWkC,GAGb,IAAIA,KAAsBlC,IAChC,CAACkC,EAAmBlC,GACzB,CAGA,MAAMmC,EAAc,CAAC,EAQd,SAASV,GAAY,WAACzB,EAAU,SAAEa,EAAQ,qBAAEuB,IACjD,IAAIC,EAAgBJ,EAAiBjC,GAMrC,OAJIoC,IACFC,EAAgBrC,GAAcmC,GAGzB,gBACLH,EAAWM,SACX,CAACC,MAAOF,GACRxB,EAEJ,C","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/dial-in-2020.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h4: \"h4\",\n    a: \"a\",\n    strong: \"strong\",\n    h6: \"h6\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"It's December already? Well let's cut to the chase shall we; we've got a lot of important news to show.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"off-the-dial-staffing\"\n  }, \"Off the Dial Staffing\"), \"\\n\", React.createElement(_components.p, null, \"I'm very excited to announce that I've put a system in place to manage staff for Off the Dial. This means Off the Dial will be able to scale and accept more staff members as we grow. With this, the community page has been changed to a staff page and has been moved to \", React.createElement(_components.a, {\n    href: \"/staff\"\n  }, \"otd.ink/staff\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"With this being said, \", React.createElement(_components.strong, null, \"staff applications are now open\"), \" for the upcoming IDTGA (more on that later).\"), \"\\n\", React.createElement(_components.p, null, \"There are a lot of different staff roles that you can apply for, such as on-day staffing, commentating, and technical work. Please, read through all of them.\"), \"\\n\", React.createElement(_components.p, null, \"Since this is the very first opening of staff applications, we are going to be very selective and intentional with who we bring onto the staff team. Do not expect a lot of staff members to be accepted. However, this shouldn't discourage you from applying.\"), \"\\n\", React.createElement(_components.h6, {\n    id: \"if-youre-interested-please-visit-otdinkstaffapply\"\n  }, \"If you're interested, please visit \", React.createElement(_components.a, {\n    href: \"/staff/apply\"\n  }, \"otd.ink/staff/apply\"), \".\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"website-updates\"\n  }, \"Website Updates\"), \"\\n\", React.createElement(_components.p, null, \"I've tweaked some minor things about the website and changed some internal stuff. Here's an overview.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Updated post layout\"), \" - You may have already noticed the different layout for posts. I did this because I read some random web-dev article about how this looks better... I also changed the look of the posts page.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Migrated community page\"), \" - As mentioned above, the community page has migrated to \", React.createElement(_components.a, {\n    href: \"/staff\"\n  }, \"otd.ink/staff\"), \". I also changed the look of the staff page.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Tweaked Footer\"), \" - The media footer now has a light-grey background as opposed to a horizontal line. No this was not in another random web-dev article.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Many features are still in development!\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"You'll soon be able to log in with your discord account.\"), \"\\n\", React.createElement(_components.li, null, \"I'm working overtime to make signup on-site a reality before the upcoming IDTGA. Speaking of which...\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"upcoming-idtga\"\n  }, \"Upcoming IDTGA\"), \"\\n\", React.createElement(_components.p, null, \"The date for the next IDTGA is yet to be announced. Since this is our first one back from the hiatus, there's a lot planned.\"), \"\\n\", React.createElement(_components.p, null, \"You can look forward to...\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Signing up for IDTGA on the Off the Dial website.\"), \"\\n\", React.createElement(_components.li, null, \"Hopefully higher turnout with the help of \", React.createElement(_components.a, {\n    href: \"https://iplabs.ink\"\n  }, \"IPL\"), \" and \", React.createElement(_components.a, {\n    href: \"https://discord.gg/c7CpftUuYK\"\n  }, \"Checkpoint 1\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"whats-next\"\n  }, \"What's next?\"), \"\\n\", React.createElement(_components.p, null, \"There's still so much that I have planned for the future of Off the Dial! Here's just a couple:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Have the Off the Dial Bot automate more during the tournament, such as automated messages for each round.\"), \"\\n\", React.createElement(_components.li, null, \"A bonus tournament, to beta-test the bot before it's used in one of our main tournaments.\"), \"\\n\", React.createElement(_components.li, null, \"Prizes!?\"), \"\\n\", React.createElement(_components.li, null, \"Ways for you to help fund the future of Off the Dial, through Patreon.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"closing-thoughts\"\n  }, \"Closing thoughts\"), \"\\n\", React.createElement(_components.p, null, \"Thank you so much for supporting Off the Dial in all of its endeavors up to this point, I can't wait to show you everything else we have planned.\\nStay tuned!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/dial-in-2020.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","h4","a","strong","h6","ol","li","ul","_provideComponents","components","React","id","href","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}