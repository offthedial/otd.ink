{"version":3,"file":"component---src-components-mdx-post-js-content-file-path-home-runner-work-site-site-src-pages-posts-idtga-36-dicussions-md-41e7ba0988b0d15bf6b1.js","mappings":"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","sources":["webpack://rewrite/./node_modules/date-fns/esm/addMinutes/index.js","webpack://rewrite/./src/pages/posts/idtga-36-dicussions.md","webpack://rewrite/./src/components/mdxPost.js","webpack://rewrite/./src/components/Mention.js","webpack://rewrite/./src/components/Title.js","webpack://rewrite/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    code: \"code\",\n    em: \"em\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Now that we've had a season of X rank, I can very safely say that it works \", React.createElement(_components.strong, null, \"VERY\"), \" differently than it did in Splatoon 2, at least in terms of how ELO calculations work in It's Dangerous to go Alone. Also, I'll be discussing on some of the feedback that you all left us in the feedback form from IDTGA 36.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"a-new-bracket-split\"\n  }, \"A New Bracket Split\"), \"\\n\", React.createElement(_components.p, null, \"In Splatoon 2, it was very easy to split between X rank and regular S+, as you had to reach S+10, then you were stuck with your X rank. This was very benificial to us as it allowed for an easy system to convert and adapt with this system. But in Splatoon 3, the fact that you can improve both at the same time (not to mention you can't drop your anarchy rank from losing matches) doesn't allow for an easy conversion to allow for even balancing. So because of this, X ranks will be calculated into ELO within their own bracket.\"), \"\\n\", React.createElement(_components.p, null, \"I will also note, that X rank is a much more accurate depiction of your rank, so if you have an X rank, please put that in, not your anarchy rank.\"), \"\\n\", React.createElement(_components.p, null, \"Also because of this new change, brackets will be split at different sizes, so instead of reaching a certain threshold to have mutliple bracket, the requirement for the bracket to split is that each bracket needs to have \", React.createElement(_components.code, null, \"6\"), \" teams (24 players).\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"last-season-of-idtga\"\n  }, \"Last Season of IDTGA????\"), \"\\n\", React.createElement(_components.p, null, \"Wait... huuh.... what's this.....\"), \"\\n\", React.createElement(_components.p, null, \"This will be the last \", React.createElement(_components.strong, null, \"regular\"), \" season of IDTGA for a while, so if you want your classic IDTGA, make sure to get in! Don't worry though, free agent tournaments will be continuing during our 5th anniversary celebrations, it'll just be a bit different.\"), \"\\n\", React.createElement(_components.p, null, \"Stay tuned for more information being released in mid January during our 5th Anniversary 'Dial In' presentation.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"questions--comments-from-you\"\n  }, \"Questions / Comments From You\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"great tournament can't wait for the next one\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Awesome, it won't be long until the next one!\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Overall, IDTGA is fun! There are just some communication issues.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Apologies on that, we'll be more clear in our announcements during the tournament in the future.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Having all the new players to the Splatoon competitive scene push lil ol' me up into the Wisdom bracket is certainly encouraging for the growth of this tournament series, this server, and this game as a whole. Keep up the good work! Let's try and hit that 192-player cap in IDTGA 37!\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"That would be awesome, we'll just have to see!\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Mahi mahi deserves to be victim of the next Big run\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Hahahaha, wouldn't we all. For context, because Wahoo World was the subject of big run, that map wasn't in the maplist for this season of IDTGA.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Despite the initial hiccups with re-shuffling teams, the whole thang went really smoothly as far as OTD is concerned, and even those hiccups were handled fairly quickly.\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Dropouts are by far the biggest issue we hate and we try and do everything we can to reduce them, but unfortunately due to the nature of our tournament it is something that will always be present.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Hi :)\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Heyo!\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/site/site/src/pages/posts/idtga-36-dicussions.md\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {addMinutes, format} from \"date-fns\";\nimport Layout from \"src/components/Layout\";\nimport Mention from \"src/components/Mention\";\nimport Title from \"src/components/Title\";\nconst shortcodes = {\n  Link,\n  Mention\n};\nconst Post = ({data: {mdx}, children}) => React.createElement(Layout, {\n  className: \"mx-8 mb-14\",\n  helmet: {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt\n  }\n}, React.createElement(Title, {\n  title: mdx.frontmatter.title\n}, React.createElement(\"div\", {\n  className: \"flex items-baseline gap-4\"\n}, React.createElement(\"p\", null, mdx.frontmatter.author), React.createElement(\"p\", null, \"·\"), React.createElement(\"p\", null, formatDate(mdx.frontmatter.date)))), React.createElement(\"article\", {\n  className: \"prose prose-lg prose-slate mx-auto dark:prose-invert\"\n}, React.createElement(MDXProvider, {\n  components: shortcodes\n}, children)));\nconst formatDate = rawDate => {\n  let date = new Date(rawDate);\n  date = addMinutes(date, date.getTimezoneOffset());\n  date = format(date, \"MMMM dd, yyyy\");\n  return date;\n};\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date\n        author\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\nconst Mention = ({ children }) => (\n  <span className=\"-my-0.5 whitespace-nowrap rounded-[3px] bg-[rgba(114,_137,_218,_0.3)] p-0.5 text-[87.5%] font-medium\">\n    {children}\n  </span>\n)\n\nexport default Mention\n","import React from \"react\"\n\nconst Title = ({ title, children }) => (\n  <div className=\"my-14 flex flex-col items-center text-center text-xl\">\n    <h1 className=\"pb-1 text-3xl font-bold\">{title}</h1>\n    <h2 className=\"max-w-4xl text-slate-500 dark:text-slate-400\">{children}</h2>\n  </div>\n)\n\nexport default Title\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["addMinutes","dirtyDate","dirtyAmount","arguments","amount","_createMdxContent","props","_components","Object","assign","p","strong","h2","code","em","blockquote","_provideComponents","components","React","id","wrapper","MDXLayout","shortcodes","Link","Mention","Post","_ref","data","mdx","children","Layout","className","helmet","title","frontmatter","description","excerpt","Title","author","formatDate","date","MDXProvider","rawDate","Date","getTimezoneOffset","format","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}